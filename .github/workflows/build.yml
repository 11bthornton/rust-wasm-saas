name: Build, Test, and Deploy Rust Yew Application

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
        profile: minimal

    - name: Cache trunk installation
      id: cache-trunk
      uses: actions/cache@v2
      with:
        path: ~/.cargo/bin/trunk
        key: ${{ runner.os }}-trunk-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Trunk
      if: steps.cache-trunk.outputs.cache-hit != 'true'
      run: cargo install trunk

    - name: Install wasm-bindgen-cli
      run: cargo install wasm-bindgen-cli

    - name: Build the Rust Yew application
      working-directory: rust_saas_app
      run: trunk build
      env:
        RUSTFLAGS: '--cfg=web_sys_unstable_apis'

    - name: Run tests
      working-directory: rust_saas_app
      run: cargo test --verbose

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract Branch Name
      id: extract_branch
      run: echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}" 

    - name: Remove Feature Prefix
      id: remove_prefix
      run: |
        if [[ "${{ steps.extract_branch.outputs.branch }}" == feature/* ]]; then
          RG_NAME="${{ steps.extract_branch.outputs.branch#feature/ }}"
        else
          RG_NAME="${{ steps.extract_branch.outputs.branch }}"
        fi
        echo "##[set-output name=resource_group;]$RG_NAME"

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      working-directory: pipeline/terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: pipeline/terraform
      run: terraform apply -auto-approve
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_resource_group_name: ${{ steps.remove_prefix.outputs.resource_group }}
